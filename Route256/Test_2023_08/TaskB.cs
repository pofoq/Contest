using Route256.Common;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Route256.Test_2023_08
{
    internal class TaskB : ITask
    {
        public void Run()
        {
            var s = Console.ReadLine()!;

            var n = int.Parse(Console.ReadLine()!);

            var result = s.ToArray();

            for (int i = 0; i < n; i++)
            {
                var arr = Console.ReadLine()!.Split(' ');
                var start = int.Parse(arr[0]);
                var end = int.Parse(arr[1]);
                var str = arr[2];
                var indx = 0;
                for (int j = start - 1; j < end; j++)
                {
                    result[j] = str[indx];
                    indx++;
                }
            }
            Console.WriteLine(result);
        }
    }
}
/*
 B. Наклейки (10 баллов)
ограничение по времени на тест1 секунда
ограничение по памяти на тест256 мегабайт
вводстандартный ввод
выводстандартный вывод
Для отслеживания посылок компания NOZO использует наклейки с надписями. Иногда надпись (или её часть) на наклейке нужно исправить, и тогда поверх старой наклейки лепят новую.

На очередной посылке появилось слишком много наклеек и теперь невозможно прочитать наклеенную надпись целиком.

Помогите это сделать по истории этих наклеек.

Входные данные
Первая строка s
 представляет собой содержимое изначальной наклейки. Гарантируется, что её длина не превышает 1000
 символов.

Во второй строке записано целое число n
 (1≤n≤1000
), обозначающее количество наклеенных поверх наклеек.

Далее идёт n
 строк, каждая из которых описывает очередную наклейку в порядке её применения: от самой старой к самой новой. Каждое описание содержит два числа starti
 и endi
 (1≤start≤end≤|s|
, где |s|
 обозначает длину строки s
) и через пробел строку ri
, которая была записана поверх символов между starti
 и endi
. Гарантируется, что длина строки ri
 точно равна end−start+1
. Эта запись обозначает, что поверх всех символов, начиная с символа под номером start
 и заканчивая символом под номером end
, была наклеена строка ri
.

Гарантируется, что все строки состоят только из строчных латинских букв.

Выходные данные
Выведите итоговую строку, которая видна после применения всех наклеек.

Примеры
входные данныеСкопировать
somesuperlongstring
3
1 2 la
4 4 d
10 13 tiny
выходные данныеСкопировать
lamdsupertinystring
входные данныеСкопировать
somesuperlongstring
4
1 2 la
4 4 d
10 13 tiny
4 5 ed
выходные данныеСкопировать
lamedupertinystring
Примечание
Иллюстрация к первому примеру из условия:


Пояснение к первому примеру:

Наклеивается первая наклейка и строка становится lamesuperlongstring.
Наклеивается вторая наклейка и строка становится lamdsuperlongstring.
Наклеивается третья наклейка и строка становится lamdsupertinystring.
Иллюстрация ко второму примеру из условия:


Пояснение ко второму примеру:

Наклеивается первая наклейка и строка становится lamesuperlongstring.
Наклеивается вторая наклейка и строка становится lamdsuperlongstring.
Наклеивается третья наклейка и строка становится lamdsupertinystring.
Наклеивается четвертая наклейка и строка становится lamedupertinystring.
 */