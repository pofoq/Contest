using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TestConsole.Codeforces.Contest_2023_04
{
    public class Task_F
    {
        public static void MainF(string[] args)
        {
            var testCaseCount = int.Parse(Console.ReadLine());

            for (int i = 0; i < testCaseCount; i++)
            {
                var result = new StringBuilder(50);
                var length = int.Parse(Console.ReadLine());
                var list = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToList();
                var sorted = list.OrderBy(el => el);
                foreach (var r in sorted)
                {
                    var index = list.IndexOf(r);
                    if (index == 0)
                    {
                        list.RemoveAt(index);
                    }
                    else if (index > list.Count / 2)
                    {
                        var range = list.TakeLast(list.Count - index - 1).ToArray();
                        list.RemoveRange(index, list.Count - index);
                        list.InsertRange(0, range);
                        result.Append(string.Concat(Enumerable.Repeat('R', list.Count - index + 1)));
                    }
                    else
                    {
                        var range = list.Take(index).ToArray();
                        list.RemoveRange(0, index + 1);
                        list.AddRange(range);
                        result.Append(string.Concat(Enumerable.Repeat('L', index)));
                    }
                    result.Append("!");
                }
                Console.WriteLine(result.ToString());
            }
        }
    }
}
/*
 F. Сортировка циклическими сдвигами (20 баллов)
ограничение по времени на тест2 секунды
ограничение по памяти на тест512 мегабайт
вводстандартный ввод
выводстандартный вывод
Циклическим сдвигом массива вправо (вращением вправо) называется такое преобразование, которое переводит массив [a1,a2,…,an−1,an]
 в [an,a1,a2,…,an−1]
. Иными словами, при таком циклическом сдвиге последний элемент переносится на первое место, а все остальные сохраняют свой порядок.

Циклическим сдвигом массива влево (вращением влево) называется такое преобразование, которое переводит массив [a1,a2,a3,…,an]
 в [a2,a3…,an,a1]
. Иными словами, при таком циклическом сдвиге первый элемент переносится на последнее место, а все остальные сохраняют свой порядок.

Задан массив различных целых чисел a
. Пусть до выполнения каких-либо действий массив b
 — пуст (содержит 0
 элементов). За одно действие вы можете:

либо совершить циклический сдвиг массива a
 вправо (действие обозначается символом R),
либо совершить циклический сдвиг массива a
 влево (действие обозначается символом L),
добавить справа в b
 текущий первый (крайний левый) элемент массива a
 — в этом случае из a
 этот элемент удаляется (действие обозначается символом !).
Выведите строку минимальной длины, которая обозначает такую последовательность действий, что в результате массив a
 окажется пустым, а массив b
 будет содержать все элементы исходного массива a
 в порядке возрастания. Если искомых строк минимальной длины несколько, то выведите любую из них.

Входные данные
В первой строке входных данных записано целое число t
 (1≤t≤100
) — количество наборов входных данных.

Наборы входных данных в тесте независимы. Друг на друга они никак не влияют.

Каждый набор входных данных состоит из двух строк.

В первой из них записано целое число n
 (1≤n≤50
) — длина заданной последовательности a
. Во второй содержится последовательность целых чисел a1,a2,…,an
 (1≤ai≤50
) — элементы массива a
. Все элементы массива a
 — различны.

Выходные данные
Выведите t
 строк, j
-я строка должна содержать ответ для j
-го набора входных данных. Ответом является строка минимальной длины, состоящая из символов R, L и !, которая соответствует последовательности действий для сортировки заданного массива a
. Если таких строк несколько, выведите любую из них.

Пример
входные данныеСкопировать
4
6
6 4 3 1 2 7
4
10 20 40 50
1
50
10
50 9 22 5 3 21 7 16 27 6
выходные данныеСкопировать
LLL!!R!R!L!!
!!!!
!
LLLL!R!LLLL!RRR!LLL!LL!R!R!!!

 */