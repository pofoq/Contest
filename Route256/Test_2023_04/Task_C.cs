using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TestConsole.Codeforces.Contest_2023_04
{
    public class Task_C
    {
        public static void MainC(string[] args)
        {
            var testCaseCount = int.Parse(Console.ReadLine());

            for (int i = 0; i < testCaseCount; i++)
            {
                var treeLength = int.Parse(Console.ReadLine());

                var treeArr = Console.ReadLine().Split(' ').Select(s => int.Parse(s)).ToArray();

                var nodes = new HashSet<int>();
                var children = new HashSet<int>();

                for (int j = 0; j < treeLength; j++)
                {
                    nodes.Add(treeArr[j++]);
                    var childLength = treeArr[j];
                    for (int childNum = 0; childNum < childLength; childNum++)
                    {
                        children.Add(treeArr[++j]);
                    }
                }

                Console.WriteLine(nodes.Except(children).FirstOrDefault());
            }


        }
    }
}
/*
C. Корень дерева (15 баллов)
ограничение по времени на тест2 секунды
ограничение по памяти на тест512 мегабайт
вводстандартный ввод
выводстандартный вывод
Корневое дерево — абстрактная структура данных, состоящая из вершин, соединённых рёбрами. В этой структуре данных есть ровно одна вершина, называемая корнем. Каждая вершина соединена рёбрами со своими сыновьями. Каждая вершина, кроме корня, имеет ровно одного родителя. Количество рёбер дерева на 1
 меньше количества его вершин.

В этой задаче вершины дерева пронумерованы числами от 1
 до n
 в произвольном порядке.

Ниже приведены изображения трёх различных корневых деревьев.

У первого дерева корнем является вершина с номером 4
, у второго дерева корнем является вершина с номером 3
, у третьего дерева корнем является вершина с номером 2
.
Закодируем дерево в виде последовательности (массива) целых чисел. Для этого выпишем в последовательность в произвольном порядке подряд коды всех вершин. Кодом вершины u
 называется последовательность из du+2
 чисел (где du
 — количество сыновей вершины u
):

первое число кода вершины — её номер u
,
второе число кода вершины — количество её детей du
, называемое также степенью этой вершины,
затем следуют d
 чисел — номера сыновей в произвольном порядке.
Обратите внимание, что как вершина, так и само дерево в общем случае может быть закодировано неоднозначно.

Например, возможный код вершины 5
 для первого дерева из примера может иметь вид: [5,2,2,6
].

Возможные коды деревьев из примера:

код первого дерева: [3,0,1,0,5,2,2,6,4,3,5,1,3,2,0,6,0]
 — в этом коде записаны вершины в следующем порядке [3,1,5,4,2,6]
;
код второго дерева: [3,1,1,1,2,4,2,4,0,2,0]
 — в этом коде записаны вершины в следующем порядке [3,1,4,2]
;
код третьего дерева: [1,0,2,1,1]
 — в этом коде записаны вершины в следующем порядке [1,2]
.
Напишите программу, которая по коду дерева выводит номер его корня.

Входные данные
В первой строке входных данных записано целое число t
 (1≤t≤100
) — количество наборов входных данных.

Наборы входных данных в тесте независимы. Друг на друга они никак не влияют.

Каждый набор входных данных состоит из двух строк.

В первой из них записано целое число m
 (2≤m≤100
) — длина последовательности, которая является кодом заданного дерева. Во второй содержится последовательность целых чисел a1,a2,…,am
 (0≤ai<99
) — код заданного дерева. Гарантируется, что a
 является корректным кодом некоторого корневого дерева.

Выходные данные
Выведите t
 строк — ответы на заданные наборы входных данных: j
-я строка должна содержать номер вершины, которая является корнем в j
-м наборе входных данных.

Пример
входные данныеСкопировать
7
17
3 0 1 0 5 2 2 6 4 3 5 1 3 2 0 6 0
11
3 1 1 1 2 4 2 4 0 2 0
5
1 0 2 1 1
2
1 0
11
2 1 3 1 0 4 1 2 3 1 1
14
4 1 5 5 2 2 1 2 1 3 1 0 3 0
5
1 1 2 2 0
выходные данныеСкопировать
4
3
2
1
4
4
1

 */